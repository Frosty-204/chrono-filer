"""Icon Manager for Chrono Filer - Theme-aware icon handling"""

import os
import logging
from typing import Dict, Optional
from PySide6.QtCore import QObject, Signal
from PySide6.QtGui import QIcon
from PySide6.QtWidgets import QApplication
import qtawesome as qta

class IconManager(QObject):
    """Manages theme-aware icons using FontAwesome5 and system themes"""
    
    icon_theme_changed = Signal()  # Emitted when icon theme changes
    
    def __init__(self):
        super().__init__()
        self.current_theme = 'light'
        self.icon_cache: Dict[str, QIcon] = {}
        self.logger = logging.getLogger(__name__)
        
    def set_theme(self, theme_name: str):
        """Set the current theme for icons"""
        self.current_theme = theme_name
        self.icon_cache.clear()  # Clear cache to force reload with new theme
        self.icon_theme_changed.emit()
        
    def get_icon(self, icon_name: str, color: Optional[str] = None) -> QIcon:
        """Get a theme-aware icon by name"""
        cache_key = f"{icon_name}_{self.current_theme}_{color}"
        
        if cache_key in self.icon_cache:
            return self.icon_cache[cache_key]
            
        # Map common icon names to QtAwesome names
        icon_mapping = {
            'folder': 'fa5s.folder',
            'file': 'fa5s.file',
            'up': 'fa5s.arrow-up',
            'refresh': 'fa5s.sync',
            'plus': 'fa5s.plus',
            'info': 'fa5s.info-circle',
            'edit': 'fa5s.edit',
            'delete': 'fa5s.trash',
            'search': 'fa5s.search',
            'settings': 'fa5s.cog',
            'home': 'fa5s.home',
            'download': 'fa5s.download',
            'upload': 'fa5s.upload',
            'save': 'fa5s.save',
            'open': 'fa5s.folder-open',
            'close': 'fa5s.times',
            'back': 'fa5s.arrow-left',
            'forward': 'fa5s.arrow-right',
            'new': 'fa5s.file',
            'copy': 'fa5s.copy',
            'paste': 'fa5s.paste',
            'cut': 'fa5s.cut',
            'undo': 'fa5s.undo',
            'redo': 'fa5s.redo',
            'zoom-in': 'fa5s.search-plus',
            'zoom-out': 'fa5s.search-minus',
            'list': 'fa5s.list',
            'grid': 'fa5s.th',
            'tree': 'fa5s.sitemap',
            'filter': 'fa5s.filter',
            'sort': 'fa5s.sort',
            'calendar': 'fa5s.calendar',
            'clock': 'fa5s.clock',
            'tag': 'fa5s.tag',
            'star': 'fa5s.star',
            'warning': 'fa5s.exclamation-triangle',
            'error': 'fa5s.times-circle',
            'success': 'fa5s.check-circle',
            'question': 'fa5s.question-circle',
            'help': 'fa5s.question-circle',
            'about': 'fa5s.info-circle',
            'exit': 'fa5s.sign-out',
            'power': 'fa5s.power-off',
            'new-folder': 'fa5s.folder-plus',
            'rename': 'fa5s.edit',
            'move': 'fa5s.arrows',
            'duplicate': 'fa5s.copy',
            'select-all': 'fa5s.check-square',
            'deselect': 'fa5s.square',
            'check': 'fa5s.check',
            'cross': 'fa5s.times',
            'clear': 'fa5s.eraser',
            'reset': 'fa5s.undo',
            'restore': 'fa5s.history',
            'favorite': 'fa5s.star',
            'bookmark': 'fa5s.bookmark',
            'maximize': 'fa5s.expand',
            'minimize': 'fa5s.compress',
            'close-window': 'fa5s.window-close',
            'fullscreen': 'fa5s.arrows-alt',
            'window': 'fa5s.window-maximize',
            'desktop': 'fa5s.desktop',
            'folder-open': 'fa5s.folder-open',
            'folder-closed': 'fa5s.folder',
            'folder-empty': 'fa5s.folder',
            'file-text': 'fa5s.file-alt',
            'file-image': 'fa5s.file-image',
            'file-audio': 'fa5s.file-audio',
            'file-video': 'fa5s.file-video',
            'file-pdf': 'fa5s.file-pdf',
            'file-archive': 'fa5s.file-archive',
            'file-code': 'fa5s.file-code',
            'image': 'fa5s.image',
            'photo': 'fa5s.image',
            'video': 'fa5s.video',
            'audio': 'fa5s.music',
            'document': 'fa5s.file-alt',
            'archive': 'fa5s.archive',
            'code': 'fa5s.code',
            'terminal': 'fa5s.terminal',
            'keyboard': 'fa5s.keyboard',
            'mouse': 'fa5s.mouse-pointer',
            'camera': 'fa5s.camera',
            'microphone': 'fa5s.microphone',
            'speaker': 'fa5s.volume-up',
            'printer': 'fa5s.print',
            'phone': 'fa5s.phone',
            'email': 'fa5s.envelope',
            'message': 'fa5s.comment',
            'chat': 'fa5s.comments',
            'notification': 'fa5s.bell',
            'alert': 'fa5s.exclamation-triangle',
            'bell': 'fa5s.bell',
            'timer': 'fa5s.hourglass',
            'date': 'fa5s.calendar',
            'time': 'fa5s.clock',
            'schedule': 'fa5s.calendar-check',
            'event': 'fa5s.calendar-plus',
            'meeting': 'fa5s.users',
            'reminder': 'fa5s.bell',
            'alarm': 'fa5s.bell',
            'inbox': 'fa5s.inbox',
            'sent': 'fa5s.paper-plane',
            'draft': 'fa5s.file-alt',
            'trash': 'fa5s.trash',
            'recycle': 'fa5s.recycle',
            'spam': 'fa5s.ban',
            'block': 'fa5s.ban',
            'allow': 'fa5s.check',
            'secure': 'fa5s.lock',
            'key': 'fa5s.key',
            'access': 'fa5s.key',
            'entry': 'fa5s.sign-in',
            'exit': 'fa5s.sign-out',
            'welcome': 'fa5s.handshake',
            'meet': 'fa5s.users',
            'join': 'fa5s.link',
            'connect': 'fa5s.link',
            'attach': 'fa5s.paperclip',
            'network': 'fa5s.network-wired',
            'web': 'fa5s.globe',
            'link': 'fa5s.link',
            'source': 'fa5s.code',
            'design': 'fa5s.pencil-ruler',
            'plan': 'fa5s.pencil-ruler',
            'method': 'fa5s.cogs',
            'tool': 'fa5s.wrench',
            'gear': 'fa5s.cog',
            'component': 'fa5s.puzzle-piece',
            'share': 'fa5s.share-alt',
            'distribute': 'fa5s.share-alt',
            'divide': 'fa5s.divide',
            'split': 'fa5s.cut',
            'separate': 'fa5s.cut',
            'detach': 'fa5s.cut',
            'disconnect': 'fa5s.unlink',
            'isolate': 'fa5s.ban',
            'contain': 'fa5s.box',
            'surround': 'fa5s.box',
            'gateway': 'fa5s.door-open',
            'portal': 'fa5s.door-open',
            'entrance': 'fa5s.door-open',
            'door': 'fa5s.door-open',
            'window': 'fa5s.window-maximize',
            'barrier': 'fa5s.ban',
            'fence': 'fa5s.ban',
            'wall': 'fa5s.ban',
            'obstacle': 'fa5s.ban',
            'block': 'fa5s.ban',
            'stop': 'fa5s.stop',
            'halt': 'fa5s.stop',
            'pause': 'fa5s.pause',
            'suspend': 'fa5s.pause',
            'resume': 'fa5s.play',
            'continue': 'fa5s.play',
            'start': 'fa5s.play',
            'begin': 'fa5s.play',
            'launch': 'fa5s.rocket',
            'initiate': 'fa5s.play',
            'activate': 'fa5s.play',
            'enable': 'fa5s.toggle-on',
            'disable': 'fa5s.toggle-off',
            'turn-on': 'fa5s.toggle-on',
            'turn-off': 'fa5s.toggle-off',
            'switch': 'fa5s.toggle-on',
            'toggle': 'fa5s.toggle-on',
            'flip': 'fa5s.exchange-alt',
            'reverse': 'fa5s.exchange-alt',
            'invert': 'fa5s.exchange-alt',
            'rotate': 'fa5s.sync',
            'spin': 'fa5s.sync',
            'twirl': 'fa5s.sync',
            'whirl': 'fa5s.sync',
            'swirl': 'fa5s.sync',
            'revolve': 'fa5s.sync',
            'orbit': 'fa5s.sync',
            'cycle': 'fa5s.sync',
            'loop': 'fa5s.sync',
            'repeat': 'fa5s.sync',
            'redo': 'fa5s.redo',
            'undo': 'fa5s.undo',
            'rewind': 'fa5s.undo',
            'back': 'fa5s.undo',
            'previous': 'fa5s.chevron-left',
            'next': 'fa5s.chevron-right',
            'forward': 'fa5s.chevron-right',
            'advance': 'fa5s.chevron-right',
            'progress': 'fa5s.chevron-right',
            'proceed': 'fa5s.chevron-right',
            'move': 'fa5s.arrows-alt',
            'shift': 'fa5s.arrows-alt',
            'transfer': 'fa5s.exchange-alt',
            'migrate': 'fa5s.exchange-alt',
            'relocate': 'fa5s.exchange-alt',
            'transport': 'fa5s.truck',
            'carry': 'fa5s.truck',
            'deliver': 'fa5s.truck',
            'ship': 'fa5s.ship',
            'send': 'fa5s.paper-plane',
            'transmit': 'fa5s.paper-plane',
            'broadcast': 'fa5s.broadcast-tower',
            'stream': 'fa5s.broadcast-tower',
            'flow': 'fa5s.water',
            'current': 'fa5s.water',
            'wave': 'fa5s.water',
            'tide': 'fa5s.water',
            'flood': 'fa5s.water',
            'drought': 'fa5s.sun',
            'rain': 'fa5s.cloud-rain',
            'storm': 'fa5s.bolt',
            'lightning': 'fa5s.bolt',
            'thunder': 'fa5s.bolt',
            'weather': 'fa5s.cloud-sun',
            'climate': 'fa5s.cloud-sun',
            'temperature': 'fa5s.thermometer-half',
            'heat': 'fa5s.thermometer-full',
            'cold': 'fa5s.thermometer-empty',
            'warm': 'fa5s.thermometer-half',
            'cool': 'fa5s.thermometer-half',
            'freeze': 'fa5s.snowflake'
        }
        
        # Get icon name - remove 'fa5s.' prefix if present
        icon_name = icon_name.replace('fa5s.', '')
        # Map base name to icon name
        icon_name = icon_mapping.get(icon_name, icon_name)
        
        # Determine color based on theme if not provided
        if color is None:
            if self.current_theme == 'dark':
                color = '#e2e8f0'  # Light color for dark theme
            else:
                color = '#475569'  # Dark color for light theme
                
        # Get icon from QtAwesome
        try:
            icon = qta.icon(icon_name, color=color)
            self.icon_cache[cache_key] = icon
            return icon
        except Exception as e:
            self.logger.warning(f"Failed to get icon '{icon_name}': {e}")
            return QIcon()
            
    def get_standard_icon(self, icon_type: str) -> QIcon:
        """Get standard application icons"""
        standard_icons = {
            'folder': 'folder',
            'file': 'file',
            'up': 'up',
            'refresh': 'refresh',
            'new': 'plus',
            'info': 'info',
            'edit': 'edit',
            'delete': 'delete',
            'search': 'search',
            'settings': 'settings',
            'home': 'home',
            'save': 'save',
            'open': 'folder-open',
            'close': 'close',
            'back': 'back',
            'forward': 'forward',
            'copy': 'copy',
            'paste': 'paste',
            'cut': 'cut',
            'undo': 'undo',
            'redo': 'redo',
            'zoom-in': 'zoom-in',
            'zoom-out': 'zoom-out',
            'list': 'list',
            'grid': 'grid',
            'tree': 'tree',
            'filter': 'filter',
            'sort': 'sort',
            'calendar': 'calendar',
            'clock': 'clock',
            'tag': 'tag',
            'star': 'star',
            'warning': 'warning',
            'error': 'error',
            'success': 'success',
            'question': 'question',
            'help': 'help',
            'about': 'about',
            'exit': 'exit',
            'power': 'power',
            'new-folder': 'new-folder',
            'rename': 'rename',
            'move': 'move',
            'duplicate': 'duplicate',
            'select-all': 'select-all',
            'deselect': 'deselect',
            'check': 'check',
            'cross': 'cross',
            'clear': 'clear',
            'reset': 'reset',
            'restore': 'restore',
            'favorite': 'favorite',
            'bookmark': 'bookmark',
            'maximize': 'maximize',
            'minimize': 'minimize',
            'close-window': 'close-window',
            'fullscreen': 'fullscreen',
            'window': 'window',
            'desktop': 'desktop',
            'folder-open': 'folder-open',
            'folder-closed': 'folder-closed',
            'folder-empty': 'folder-empty',
            'file-text': 'file-text',
            'file-image': 'file-image',
            'file-audio': 'file-audio',
            'file-video': 'file-video',
            'file-pdf': 'file-pdf',
            'file-archive': 'file-archive',
            'file-code': 'file-code',
            'image': 'image',
            'photo': 'photo',
            'video': 'video',
            'audio': 'audio',
            'document': 'document',
            'archive': 'archive',
            'code': 'code',
            'terminal': 'terminal',
            'keyboard': 'keyboard',
            'mouse': 'mouse',
            'camera': 'camera',
            'microphone': 'microphone',
            'speaker': 'speaker',
            'printer': 'printer',
            'phone': 'phone',
            'email': 'email',
            'message': 'message',
            'chat': 'chat',
            'notification': 'notification',
            'alert': 'alert',
            'bell': 'bell',
            'timer': 'timer',
            'date': 'date',
            'time': 'time',
            'schedule': 'schedule',
            'event': 'event',
            'meeting': 'meeting',
            'reminder': 'reminder',
            'alarm': 'alarm',
            'inbox': 'inbox',
            'sent': 'sent',
            'draft': 'draft',
            'trash': 'trash',
            'recycle': 'recycle',
            'spam': 'spam',
            'block': 'block',
            'allow': 'allow',
            'secure': 'secure',
            'key': 'key',
            'access': 'access',
            'entry': 'entry',
            'exit': 'exit',
            'welcome': 'welcome',
            'meet': 'meet',
            'join': 'join',
            'connect': 'connect',
            'attach': 'attach',
            'network': 'network',
            'web': 'web',
            'link': 'link',
            'source': 'source',
            'design': 'design',
            'plan': 'plan',
            'method': 'method',
            'tool': 'tool',
            'gear': 'gear',
            'component': 'component',
            'share': 'share',
            'distribute': 'distribute',
            'divide': 'divide',
            'split': 'split',
            'separate': 'separate',
            'detach': 'detach',
            'disconnect': 'disconnect',
            'isolate': 'isolate',
            'contain': 'contain',
            'surround': 'surround',
            'gateway': 'gateway',
            'portal': 'portal',
            'entrance': 'entrance',
            'door': 'door',
            'window': 'window',
            'barrier': 'barrier',
            'fence': 'fence',
            'wall': 'wall',
            'obstacle': 'obstacle',
            'block': 'block',
            'stop': 'stop',
            'halt': 'halt',
            'pause': 'pause',
            'suspend': 'suspend',
            'resume': 'resume',
            'continue': 'continue',
            'start': 'start',
            'begin': 'begin',
            'launch': 'launch',
            'initiate': 'initiate',
            'activate': 'activate',
            'enable': 'enable',
            'disable': 'disable',
            'turn-on': 'turn-on',
            'turn-off': 'turn-off',
            'switch': 'switch',
            'toggle': 'toggle',
            'flip': 'flip',
            'reverse': 'reverse',
            'invert': 'invert',
            'rotate': 'rotate',
            'spin': 'spin',
            'twirl': 'twirl',
            'whirl': 'whirl',
            'swirl': 'swirl',
            'revolve': 'revolve',
            'orbit': 'orbit',
            'cycle': 'cycle',
            'loop': 'loop',
            'repeat': 'repeat',
            'redo': 'redo',
            'undo': 'undo',
            'rewind': 'rewind',
            'back': 'back',
            'previous': 'previous',
            'next': 'next',
            'forward': 'forward',
            'advance': 'advance',
            'progress': 'progress',
            'proceed': 'proceed',
            'move': 'move',
            'shift': 'shift',
            'transfer': 'transfer',
            'migrate': 'migrate',
            'relocate': 'relocate',
            'transport': 'transport',
            'carry': 'carry',
            'deliver': 'deliver',
            'ship': 'ship',
            'send': 'send',
            'transmit': 'transmit',
            'broadcast': 'broadcast',
            'stream': 'stream',
            'flow': 'flow',
            'current': 'current',
            'wave': 'wave',
            'tide': 'tide',
            'flood': 'flood',
            'drought': 'drought',
            'rain': 'rain',
            'storm': 'storm',
            'lightning': 'lightning',
            'thunder': 'thunder',
            'weather': 'weather',
            'climate': 'climate',
            'temperature': 'temperature',
            'heat': 'heat',
            'cold': 'cold',
            'warm': 'warm',
            'cool': 'cool',
            'freeze': 'freeze'
        }
        
        return self.get_icon(standard_icons.get(icon_type, 'file'))


# Global icon manager instance (will be initialized in main.py)
icon_manager = None